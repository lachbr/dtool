/*
 * This file generated by:
 * interrogate -nodb -python -promiscuous -I /home/drose/player/dtool/include -module dtoolconfig -library libdtoolconfig -true-names -do-module -oc pydtool.cxx interrogate_interface.h 
 *
 */


#include "interrogate_interface.h"
#include "dtoolbase.h"

#undef HAVE_LONG_LONG

#ifdef PYTHON_FRAMEWORK
  #include "Python/Python.h"
#else
  #include "Python.h"
#endif

extern "C" {

/*
 * Python wrapper for
 * int interrogate_number_of_manifests();
 */
static PyObject *
_inPCPDJwgip(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_manifests();
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_manifest(int n);
 */
static PyObject *
_inPCPDJKkDz(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_get_manifest((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_manifest_by_name(char const *manifest_name);
 */
static PyObject *
_inPCPDJZz9N(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    int return_value = interrogate_get_manifest_by_name((char const *)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_manifest_name(int manifest);
 */
static PyObject *
_inPCPDJKqIx(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_manifest_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_manifest_definition(int manifest);
 */
static PyObject *
_inPCPDJ_uSj(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_manifest_definition((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_manifest_has_type(int manifest);
 */
static PyObject *
_inPCPDJsBN6(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_manifest_has_type((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_manifest_get_type(int manifest);
 */
static PyObject *
_inPCPDJc8Lg(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_manifest_get_type((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_manifest_has_getter(int manifest);
 */
static PyObject *
_inPCPDJ3MkE(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_manifest_has_getter((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_manifest_getter(int manifest);
 */
static PyObject *
_inPCPDJsk9F(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_manifest_getter((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_manifest_has_int_value(int manifest);
 */
static PyObject *
_inPCPDJC9u_(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_manifest_has_int_value((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_manifest_get_int_value(int manifest);
 */
static PyObject *
_inPCPDJS_tk(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_manifest_get_int_value((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_element_name(int element);
 */
static PyObject *
_inPCPDJ_U2J(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_element_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_element_scoped_name(int element);
 */
static PyObject *
_inPCPDJZ4Us(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_element_scoped_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_element_by_name(char const *element_name);
 */
static PyObject *
_inPCPDJd695(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    int return_value = interrogate_get_element_by_name((char const *)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_element_by_scoped_name(char const *element_name);
 */
static PyObject *
_inPCPDJeISc(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    int return_value = interrogate_get_element_by_scoped_name((char const *)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_element_type(int element);
 */
static PyObject *
_inPCPDJpHUf(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_element_type((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_element_has_getter(int element);
 */
static PyObject *
_inPCPDJk5ao(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_element_has_getter((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_element_getter(int element);
 */
static PyObject *
_inPCPDJV4dk(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_element_getter((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_element_has_setter(int element);
 */
static PyObject *
_inPCPDJQApo(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_element_has_setter((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_element_setter(int element);
 */
static PyObject *
_inPCPDJV_Io(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_element_setter((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_number_of_globals();
 */
static PyObject *
_inPCPDJNQAC(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_globals();
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_global(int n);
 */
static PyObject *
_inPCPDJAfO2(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_get_global((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_number_of_global_functions();
 */
static PyObject *
_inPCPDJV5jm(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_global_functions();
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_global_function(int n);
 */
static PyObject *
_inPCPDJwsjw(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_get_global_function((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_number_of_functions();
 */
static PyObject *
_inPCPDJZjcX(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_functions();
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_function(int n);
 */
static PyObject *
_inPCPDJR_w6(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_get_function((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_function_name(int function);
 */
static PyObject *
_inPCPDJw6ns(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_function_scoped_name(int function);
 */
static PyObject *
_inPCPDJGX78(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_scoped_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_function_has_comment(int type);
 */
static PyObject *
_inPCPDJ_iVJ(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_has_comment((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_function_comment(int type);
 */
static PyObject *
_inPCPDJg3TW(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_comment((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_function_prototype(int type);
 */
static PyObject *
_inPCPDJi9Wj(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_prototype((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_function_is_method(int function);
 */
static PyObject *
_inPCPDJG2QW(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_is_method((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_function_class(int function);
 */
static PyObject *
_inPCPDJIZTX(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_function_class((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_function_has_module_name(int function);
 */
static PyObject *
_inPCPDJu8Rq(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_has_module_name((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_function_module_name(int function);
 */
static PyObject *
_inPCPDJ9_el(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_function_module_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_function_is_virtual(int function);
 */
static PyObject *
_inPCPDJaus9(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_function_is_virtual((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_function_number_of_c_wrappers(int function);
 */
static PyObject *
_inPCPDJaf25(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_function_number_of_c_wrappers((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_function_c_wrapper(int function, int n);
 */
static PyObject *
_inPCPDJnPrB(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_function_c_wrapper((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_function_number_of_python_wrappers(int function);
 */
static PyObject *
_inPCPDJDmkY(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_function_number_of_python_wrappers((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_function_python_wrapper(int function, int n);
 */
static PyObject *
_inPCPDJKL_W(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_function_python_wrapper((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_wrapper_name(int wrapper);
 */
static PyObject *
_inPCPDJtc9G(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_wrapper_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_wrapper_is_callable_by_name(int wrapper);
 */
static PyObject *
_inPCPDJa0Pp(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_is_callable_by_name((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_wrapper_has_return_value(int wrapper);
 */
static PyObject *
_inPCPDJ9GJl(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_has_return_value((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_wrapper_return_type(int wrapper);
 */
static PyObject *
_inPCPDJKfmo(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_wrapper_return_type((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_wrapper_caller_manages_return_value(int wrapper);
 */
static PyObject *
_inPCPDJPhA0(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_caller_manages_return_value((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_wrapper_return_value_destructor(int wrapper);
 */
static PyObject *
_inPCPDJVMJl(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_wrapper_return_value_destructor((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_wrapper_number_of_parameters(int wrapper);
 */
static PyObject *
_inPCPDJ6ACv(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_wrapper_number_of_parameters((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_wrapper_parameter_type(int wrapper, int n);
 */
static PyObject *
_inPCPDJNJX7(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_wrapper_parameter_type((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_wrapper_parameter_has_name(int wrapper, int n);
 */
static PyObject *
_inPCPDJI3Xf(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_wrapper_parameter_has_name((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_wrapper_parameter_name(int wrapper, int n);
 */
static PyObject *
_inPCPDJWOel(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_wrapper_parameter_name((int)param0, (int)param1);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_wrapper_parameter_is_this(int wrapper, int n);
 */
static PyObject *
_inPCPDJWvbH(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_wrapper_parameter_is_this((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_wrapper_has_pointer(int wrapper);
 */
static PyObject *
_inPCPDJ6JG0(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_wrapper_has_pointer((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_wrapper_unique_name(int wrapper);
 */
static PyObject *
_inPCPDJauwR(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_wrapper_unique_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_wrapper_by_unique_name(char const *unique_name);
 */
static PyObject *
_inPCPDJ5OfF(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    int return_value = interrogate_get_wrapper_by_unique_name((char const *)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_number_of_global_types();
 */
static PyObject *
_inPCPDJlLys(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_global_types();
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_global_type(int n);
 */
static PyObject *
_inPCPDJFt0z(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_get_global_type((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_number_of_types();
 */
static PyObject *
_inPCPDJbw3v(PyObject *, PyObject *args) {
  if (PyArg_ParseTuple(args, "")) {
    int return_value = interrogate_number_of_types();
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_type(int n);
 */
static PyObject *
_inPCPDJxpx8(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_get_type((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_type_by_name(char const *type_name);
 */
static PyObject *
_inPCPDJGhcs(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    int return_value = interrogate_get_type_by_name((char const *)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_type_by_scoped_name(char const *type_name);
 */
static PyObject *
_inPCPDJjhrb(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    int return_value = interrogate_get_type_by_scoped_name((char const *)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_get_type_by_true_name(char const *type_name);
 */
static PyObject *
_inPCPDJToqq(PyObject *, PyObject *args) {
  char *param0;
  if (PyArg_ParseTuple(args, "s", &param0)) {
    int return_value = interrogate_get_type_by_true_name((char const *)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_type_name(int type);
 */
static PyObject *
_inPCPDJoIf5(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_type_scoped_name(int type);
 */
static PyObject *
_inPCPDJ6Xo_(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_scoped_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_type_true_name(int type);
 */
static PyObject *
_inPCPDJ8eET(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_true_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_nested(int type);
 */
static PyObject *
_inPCPDJNMOE(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_nested((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_outer_class(int type);
 */
static PyObject *
_inPCPDJidlm(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_outer_class((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_has_comment(int type);
 */
static PyObject *
_inPCPDJ5FdF(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_comment((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_type_comment(int type);
 */
static PyObject *
_inPCPDJR9bU(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_comment((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_has_module_name(int type);
 */
static PyObject *
_inPCPDJPAqU(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_module_name((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_type_module_name(int type);
 */
static PyObject *
_inPCPDJg4gH(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    char const *return_value = interrogate_type_module_name((int)param0);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_atomic(int type);
 */
static PyObject *
_inPCPDJqZbO(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_atomic((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * AtomicToken interrogate_type_atomic_token(int type);
 */
static PyObject *
_inPCPDJiCgZ(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    AtomicToken return_value = interrogate_type_atomic_token((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_unsigned(int type);
 */
static PyObject *
_inPCPDJvj9C(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_unsigned((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_signed(int type);
 */
static PyObject *
_inPCPDJ5Tjz(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_signed((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_long(int type);
 */
static PyObject *
_inPCPDJTV9E(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_long((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_longlong(int type);
 */
static PyObject *
_inPCPDJPd3W(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_longlong((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_short(int type);
 */
static PyObject *
_inPCPDJRIvd(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_short((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_wrapped(int type);
 */
static PyObject *
_inPCPDJeAKS(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_wrapped((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_pointer(int type);
 */
static PyObject *
_inPCPDJE_rr(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_pointer((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_const(int type);
 */
static PyObject *
_inPCPDJpZxy(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_const((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_wrapped_type(int type);
 */
static PyObject *
_inPCPDJZ__l(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_wrapped_type((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_enum(int type);
 */
static PyObject *
_inPCPDJQDIY(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_enum((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_number_of_enum_values(int type);
 */
static PyObject *
_inPCPDJA7Ig(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_enum_values((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_type_enum_value_name(int type, int n);
 */
static PyObject *
_inPCPDJY50T(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_type_enum_value_name((int)param0, (int)param1);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * char const *interrogate_type_enum_value_scoped_name(int type, int n);
 */
static PyObject *
_inPCPDJypPX(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    char const *return_value = interrogate_type_enum_value_scoped_name((int)param0, (int)param1);
    return Py_BuildValue("s", return_value);
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_enum_value(int type, int n);
 */
static PyObject *
_inPCPDJIKx5(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_enum_value((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_struct(int type);
 */
static PyObject *
_inPCPDJI_e3(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_struct((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_class(int type);
 */
static PyObject *
_inPCPDJCAx3(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_class((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_union(int type);
 */
static PyObject *
_inPCPDJKOMc(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_union((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_fully_defined(int type);
 */
static PyObject *
_inPCPDJVUhE(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_fully_defined((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_is_unpublished(int type);
 */
static PyObject *
_inPCPDJu8T0(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_is_unpublished((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_number_of_constructors(int type);
 */
static PyObject *
_inPCPDJsPNn(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_constructors((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_get_constructor(int type, int n);
 */
static PyObject *
_inPCPDJP_f2(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_get_constructor((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_has_destructor(int type);
 */
static PyObject *
_inPCPDJuE9q(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_has_destructor((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_destructor_is_inherited(int type);
 */
static PyObject *
_inPCPDJh1o6(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    bool return_value = interrogate_type_destructor_is_inherited((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_get_destructor(int type);
 */
static PyObject *
_inPCPDJc4vK(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_get_destructor((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_number_of_elements(int type);
 */
static PyObject *
_inPCPDJXbpM(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_elements((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_get_element(int type, int n);
 */
static PyObject *
_inPCPDJYAfN(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_get_element((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_number_of_methods(int type);
 */
static PyObject *
_inPCPDJDbCl(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_methods((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_get_method(int type, int n);
 */
static PyObject *
_inPCPDJ2R7K(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_get_method((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_number_of_casts(int type);
 */
static PyObject *
_inPCPDJg6iq(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_casts((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_get_cast(int type, int n);
 */
static PyObject *
_inPCPDJNxR0(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_get_cast((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_number_of_derivations(int type);
 */
static PyObject *
_inPCPDJ8n7D(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_derivations((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_get_derivation(int type, int n);
 */
static PyObject *
_inPCPDJazFz(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_get_derivation((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_derivation_has_upcast(int type, int n);
 */
static PyObject *
_inPCPDJgkPe(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_type_derivation_has_upcast((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_get_upcast(int type, int n);
 */
static PyObject *
_inPCPDJIRmS(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_get_upcast((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_derivation_downcast_is_impossible(int type, int n);
 */
static PyObject *
_inPCPDJN_Lp(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_type_derivation_downcast_is_impossible((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * bool interrogate_type_derivation_has_downcast(int type, int n);
 */
static PyObject *
_inPCPDJ2xei(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    bool return_value = interrogate_type_derivation_has_downcast((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_get_downcast(int type, int n);
 */
static PyObject *
_inPCPDJTgkE(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_get_downcast((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_number_of_nested_types(int type);
 */
static PyObject *
_inPCPDJh4_l(PyObject *, PyObject *args) {
  int param0;
  if (PyArg_ParseTuple(args, "i", &param0)) {
    int return_value = interrogate_type_number_of_nested_types((int)param0);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

/*
 * Python wrapper for
 * int interrogate_type_get_nested_type(int type, int n);
 */
static PyObject *
_inPCPDJnedH(PyObject *, PyObject *args) {
  int param0;
  int param1;
  if (PyArg_ParseTuple(args, "ii", &param0, &param1)) {
    int return_value = interrogate_type_get_nested_type((int)param0, (int)param1);
    return Py_BuildValue("i", (int)(return_value));
  }
  return (PyObject *)NULL;
}

}  /* close extern "C" */

static PyMethodDef python_methods[] = {
  { "interrogate_type_get_method", &_inPCPDJ2R7K, METH_VARARGS },
  { "interrogate_type_derivation_has_downcast", &_inPCPDJ2xei, METH_VARARGS },
  { "interrogate_manifest_has_getter", &_inPCPDJ3MkE, METH_VARARGS },
  { "interrogate_type_has_comment", &_inPCPDJ5FdF, METH_VARARGS },
  { "interrogate_get_wrapper_by_unique_name", &_inPCPDJ5OfF, METH_VARARGS },
  { "interrogate_type_is_signed", &_inPCPDJ5Tjz, METH_VARARGS },
  { "interrogate_wrapper_number_of_parameters", &_inPCPDJ6ACv, METH_VARARGS },
  { "interrogate_wrapper_has_pointer", &_inPCPDJ6JG0, METH_VARARGS },
  { "interrogate_type_scoped_name", &_inPCPDJ6Xo_, METH_VARARGS },
  { "interrogate_type_true_name", &_inPCPDJ8eET, METH_VARARGS },
  { "interrogate_type_number_of_derivations", &_inPCPDJ8n7D, METH_VARARGS },
  { "interrogate_wrapper_has_return_value", &_inPCPDJ9GJl, METH_VARARGS },
  { "interrogate_function_module_name", &_inPCPDJ9_el, METH_VARARGS },
  { "interrogate_type_number_of_enum_values", &_inPCPDJA7Ig, METH_VARARGS },
  { "interrogate_get_global", &_inPCPDJAfO2, METH_VARARGS },
  { "interrogate_manifest_has_int_value", &_inPCPDJC9u_, METH_VARARGS },
  { "interrogate_type_is_class", &_inPCPDJCAx3, METH_VARARGS },
  { "interrogate_type_number_of_methods", &_inPCPDJDbCl, METH_VARARGS },
  { "interrogate_function_number_of_python_wrappers", &_inPCPDJDmkY, METH_VARARGS },
  { "interrogate_type_is_pointer", &_inPCPDJE_rr, METH_VARARGS },
  { "interrogate_get_global_type", &_inPCPDJFt0z, METH_VARARGS },
  { "interrogate_function_is_method", &_inPCPDJG2QW, METH_VARARGS },
  { "interrogate_function_scoped_name", &_inPCPDJGX78, METH_VARARGS },
  { "interrogate_get_type_by_name", &_inPCPDJGhcs, METH_VARARGS },
  { "interrogate_wrapper_parameter_has_name", &_inPCPDJI3Xf, METH_VARARGS },
  { "interrogate_type_enum_value", &_inPCPDJIKx5, METH_VARARGS },
  { "interrogate_type_get_upcast", &_inPCPDJIRmS, METH_VARARGS },
  { "interrogate_function_class", &_inPCPDJIZTX, METH_VARARGS },
  { "interrogate_type_is_struct", &_inPCPDJI_e3, METH_VARARGS },
  { "interrogate_function_python_wrapper", &_inPCPDJKL_W, METH_VARARGS },
  { "interrogate_type_is_union", &_inPCPDJKOMc, METH_VARARGS },
  { "interrogate_wrapper_return_type", &_inPCPDJKfmo, METH_VARARGS },
  { "interrogate_get_manifest", &_inPCPDJKkDz, METH_VARARGS },
  { "interrogate_manifest_name", &_inPCPDJKqIx, METH_VARARGS },
  { "interrogate_wrapper_parameter_type", &_inPCPDJNJX7, METH_VARARGS },
  { "interrogate_type_is_nested", &_inPCPDJNMOE, METH_VARARGS },
  { "interrogate_number_of_globals", &_inPCPDJNQAC, METH_VARARGS },
  { "interrogate_type_derivation_downcast_is_impossible", &_inPCPDJN_Lp, METH_VARARGS },
  { "interrogate_type_get_cast", &_inPCPDJNxR0, METH_VARARGS },
  { "interrogate_type_has_module_name", &_inPCPDJPAqU, METH_VARARGS },
  { "interrogate_type_get_constructor", &_inPCPDJP_f2, METH_VARARGS },
  { "interrogate_type_is_longlong", &_inPCPDJPd3W, METH_VARARGS },
  { "interrogate_wrapper_caller_manages_return_value", &_inPCPDJPhA0, METH_VARARGS },
  { "interrogate_element_has_setter", &_inPCPDJQApo, METH_VARARGS },
  { "interrogate_type_is_enum", &_inPCPDJQDIY, METH_VARARGS },
  { "interrogate_type_comment", &_inPCPDJR9bU, METH_VARARGS },
  { "interrogate_type_is_short", &_inPCPDJRIvd, METH_VARARGS },
  { "interrogate_get_function", &_inPCPDJR_w6, METH_VARARGS },
  { "interrogate_manifest_get_int_value", &_inPCPDJS_tk, METH_VARARGS },
  { "interrogate_type_is_long", &_inPCPDJTV9E, METH_VARARGS },
  { "interrogate_type_get_downcast", &_inPCPDJTgkE, METH_VARARGS },
  { "interrogate_get_type_by_true_name", &_inPCPDJToqq, METH_VARARGS },
  { "interrogate_element_getter", &_inPCPDJV4dk, METH_VARARGS },
  { "interrogate_number_of_global_functions", &_inPCPDJV5jm, METH_VARARGS },
  { "interrogate_wrapper_return_value_destructor", &_inPCPDJVMJl, METH_VARARGS },
  { "interrogate_type_is_fully_defined", &_inPCPDJVUhE, METH_VARARGS },
  { "interrogate_element_setter", &_inPCPDJV_Io, METH_VARARGS },
  { "interrogate_wrapper_parameter_name", &_inPCPDJWOel, METH_VARARGS },
  { "interrogate_wrapper_parameter_is_this", &_inPCPDJWvbH, METH_VARARGS },
  { "interrogate_type_number_of_elements", &_inPCPDJXbpM, METH_VARARGS },
  { "interrogate_type_enum_value_name", &_inPCPDJY50T, METH_VARARGS },
  { "interrogate_type_get_element", &_inPCPDJYAfN, METH_VARARGS },
  { "interrogate_element_scoped_name", &_inPCPDJZ4Us, METH_VARARGS },
  { "interrogate_type_wrapped_type", &_inPCPDJZ__l, METH_VARARGS },
  { "interrogate_number_of_functions", &_inPCPDJZjcX, METH_VARARGS },
  { "interrogate_get_manifest_by_name", &_inPCPDJZz9N, METH_VARARGS },
  { "interrogate_element_name", &_inPCPDJ_U2J, METH_VARARGS },
  { "interrogate_function_has_comment", &_inPCPDJ_iVJ, METH_VARARGS },
  { "interrogate_manifest_definition", &_inPCPDJ_uSj, METH_VARARGS },
  { "interrogate_wrapper_is_callable_by_name", &_inPCPDJa0Pp, METH_VARARGS },
  { "interrogate_function_number_of_c_wrappers", &_inPCPDJaf25, METH_VARARGS },
  { "interrogate_function_is_virtual", &_inPCPDJaus9, METH_VARARGS },
  { "interrogate_wrapper_unique_name", &_inPCPDJauwR, METH_VARARGS },
  { "interrogate_type_get_derivation", &_inPCPDJazFz, METH_VARARGS },
  { "interrogate_number_of_types", &_inPCPDJbw3v, METH_VARARGS },
  { "interrogate_type_get_destructor", &_inPCPDJc4vK, METH_VARARGS },
  { "interrogate_manifest_get_type", &_inPCPDJc8Lg, METH_VARARGS },
  { "interrogate_get_element_by_name", &_inPCPDJd695, METH_VARARGS },
  { "interrogate_type_is_wrapped", &_inPCPDJeAKS, METH_VARARGS },
  { "interrogate_get_element_by_scoped_name", &_inPCPDJeISc, METH_VARARGS },
  { "interrogate_function_comment", &_inPCPDJg3TW, METH_VARARGS },
  { "interrogate_type_module_name", &_inPCPDJg4gH, METH_VARARGS },
  { "interrogate_type_number_of_casts", &_inPCPDJg6iq, METH_VARARGS },
  { "interrogate_type_derivation_has_upcast", &_inPCPDJgkPe, METH_VARARGS },
  { "interrogate_type_destructor_is_inherited", &_inPCPDJh1o6, METH_VARARGS },
  { "interrogate_type_number_of_nested_types", &_inPCPDJh4_l, METH_VARARGS },
  { "interrogate_function_prototype", &_inPCPDJi9Wj, METH_VARARGS },
  { "interrogate_type_atomic_token", &_inPCPDJiCgZ, METH_VARARGS },
  { "interrogate_type_outer_class", &_inPCPDJidlm, METH_VARARGS },
  { "interrogate_get_type_by_scoped_name", &_inPCPDJjhrb, METH_VARARGS },
  { "interrogate_element_has_getter", &_inPCPDJk5ao, METH_VARARGS },
  { "interrogate_number_of_global_types", &_inPCPDJlLys, METH_VARARGS },
  { "interrogate_function_c_wrapper", &_inPCPDJnPrB, METH_VARARGS },
  { "interrogate_type_get_nested_type", &_inPCPDJnedH, METH_VARARGS },
  { "interrogate_type_name", &_inPCPDJoIf5, METH_VARARGS },
  { "interrogate_element_type", &_inPCPDJpHUf, METH_VARARGS },
  { "interrogate_type_is_const", &_inPCPDJpZxy, METH_VARARGS },
  { "interrogate_type_is_atomic", &_inPCPDJqZbO, METH_VARARGS },
  { "interrogate_manifest_has_type", &_inPCPDJsBN6, METH_VARARGS },
  { "interrogate_type_number_of_constructors", &_inPCPDJsPNn, METH_VARARGS },
  { "interrogate_manifest_getter", &_inPCPDJsk9F, METH_VARARGS },
  { "interrogate_wrapper_name", &_inPCPDJtc9G, METH_VARARGS },
  { "interrogate_function_has_module_name", &_inPCPDJu8Rq, METH_VARARGS },
  { "interrogate_type_is_unpublished", &_inPCPDJu8T0, METH_VARARGS },
  { "interrogate_type_has_destructor", &_inPCPDJuE9q, METH_VARARGS },
  { "interrogate_type_is_unsigned", &_inPCPDJvj9C, METH_VARARGS },
  { "interrogate_function_name", &_inPCPDJw6ns, METH_VARARGS },
  { "interrogate_number_of_manifests", &_inPCPDJwgip, METH_VARARGS },
  { "interrogate_get_global_function", &_inPCPDJwsjw, METH_VARARGS },
  { "interrogate_get_type", &_inPCPDJxpx8, METH_VARARGS },
  { "interrogate_type_enum_value_scoped_name", &_inPCPDJypPX, METH_VARARGS },
  { NULL, NULL }
};

#ifdef _WIN32
extern "C" __declspec(dllexport) void initlibdtoolconfig();
#else
extern "C" void initlibdtoolconfig();
#endif

void initlibdtoolconfig() {
  Py_InitModule("libdtoolconfig", python_methods);
}

